.. include:: substitutions.rst
========
Abstract
========

In a distributed system, where processes potentially live on different computers, sometimes the system may end up at a distinction point at which the system must choose which road it will go. Since processes are partitioned across the network, resolving this distinction may not always be trivial. This is where consensus algorithms come in, ensuring all the working parts of the system can agree on a specific course of action, even when some parts fail. One key method for achieving this is the Bracha-Toueg Crash Consensus Algorithm, designed to help the system reach a common decision, even if several parts crash In this study, I will implement the Bracha-Toueg Crash Consensus Algorithm on the AHCv2 platform to test how well it works under different challenging conditions, such as crashes, delays in communication, and changes in the network structure. I want to see if the algorithm could still help the system agree on important decisions, keep everything running smoothly, and recover quickly from any problems.